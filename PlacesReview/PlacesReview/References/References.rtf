{\rtf1\ansi\ansicpg1252\cocoartf1344\cocoasubrtf720
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red14\green115\blue192;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://b2cloud.com.au/tutorial/transitioning-from-objective-c-to-swift/"}}{\fldrslt 
\f0\fs24 \cf0 http://b2cloud.com.au/tutorial/transitioning-from-objective-c-to-swift/}}
\f0\fs24 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/6374159/performance-of-nsmanagedobjectcontext-save-degrades-dramatically"}}{\fldrslt \cf0 http://stackoverflow.com/questions/6374159/performance-of-nsmanagedobjectcontext-save-degrades-dramatically}}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "https://robots.thoughtbot.com/how-to-handle-large-amounts-of-data-on-maps"}}{\fldrslt \cf0 https://robots.thoughtbot.com/how-to-handle-large-amounts-of-data-on-maps}}\
A/B testing - What framework to choose?\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://www.iosnomad.com/blog/2014/4/21/fluent-pagination"}}{\fldrslt \cf0 http://www.iosnomad.com/blog/2014/4/21/fluent-pagination}}\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://commandshift.co.uk/blog/2014/06/11/understanding-optionals-in-swift/"}}{\fldrslt \cf0 http://commandshift.co.uk/blog/2014/06/11/understanding-optionals-in-swift/}}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://interactivepython.org/runestone/static/pythonds/AlgorithmAnalysis/AnAnagramDetectionExample.html"}}{\fldrslt \cf0 http://interactivepython.org/runestone/static/pythonds/AlgorithmAnalysis/AnAnagramDetectionExample.html}}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "https://www.iconfinder.com/DesignRevision"}}{\fldrslt \cf0 https://www.iconfinder.com/DesignRevision}}\
\
For Marking warnings in swift\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/24183812/swift-warning-equivalent"}}{\fldrslt \cf0 http://stackoverflow.com/questions/24183812/swift-warning-equivalent}}\
\
Icons:\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "https://www.iconfinder.com/iconsets/social-15"}}{\fldrslt \cf0 https://www.iconfinder.com/iconsets/social-15}}\
{\field{\*\fldinst{HYPERLINK "https://www.iconfinder.com/fermanaziz"}}{\fldrslt https://www.iconfinder.com/fermanaziz}}\
\
//{\field{\*\fldinst{HYPERLINK "http://google-styleguide.googlecode.com/svn/trunk/objcguide.xml"}}{\fldrslt http://google-styleguide.googlecode.com/svn/trunk/objcguide.xml}}\
//{\field{\*\fldinst{HYPERLINK "https://github.com/raywenderlich/swift-style-guide"}}{\fldrslt https://github.com/raywenderlich/swift-style-guide}}\
\
//Custom filter. But this is not available in normal sqlite store. We could use sqlcipher to achieve this\
//{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/3569742/nspredicate-with-functions-or-selectors"}}{\fldrslt http://stackoverflow.com/questions/3569742/nspredicate-with-functions-or-selectors}}\
//{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/3543208/nsfetchrequest-and-predicatewithblock"}}{\fldrslt http://stackoverflow.com/questions/3543208/nsfetchrequest-and-predicatewithblock}}\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/6355893/implicit-declaration-of-function-sqlite3-key"}}{\fldrslt \cf0 http://stackoverflow.com/questions/6355893/implicit-declaration-of-function-sqlite3-key}}\
\
//{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/17591616/nsexpression-respect-a-subquery-nspredicate"}}{\fldrslt http://stackoverflow.com/questions/17591616/nsexpression-respect-a-subquery-nspredicate}}\
\
Anagram Problem analysis\
\
1. Split all the words in to an array\
2. Apply anagram algorithm to this list with the search keyword\
\
\
\pard\tx433\pardeftab433\pardirnatural
\cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural
\cf0 3. If the item in the list is\
\
//{\field{\*\fldinst{HYPERLINK "http://stackoverflow.com/questions/13084930/how-to-create-a-core-data-predicate-to-test-that-a-relation-contains-all-given-o"}}{\fldrslt http://stackoverflow.com/questions/13084930/how-to-create-a-core-data-predicate-to-test-that-a-relation-contains-all-given-o}}\
O(n^2)\
func doesAngramOfSearchKeyWordExistsInReview(String searchText, String review)\
\{\
	NSArray listOfWOrdsToSearchAnagram =  review.componentsSeparatedbySpace\
	\
	for (index=0 .. listOfWOrdsToSearchAnagram.count)\
	\{\
		anagramAlgorithm (searchText, listOfWOrdsToSearchAnagram[index])\
	\}\
	\
\}\
(BOOL) anagramAlgorithm(String  searchText, String wordInReviewString)\
\{\
\
	if(searchText.lenght < wordInReviewString.length)\
	\{\
		return\
	\}\
	else\
	\{\
		if(searchText.length == wordInReviewString.length)\
		\{\
			BOOL isAnagram =  isAnagram(searchText, wordInReviewString)\
		\}\
		else\
		\{\
			\
			 isAnagram(searchText, wordInReviewString)\
		\}\
\
	\}\
\
\
\}\
\
//{\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/mac/documentation/Cocoa/Reference/Foundation/Classes/NSSet_Class/index.html#//apple_ref/occ/instm/NSSet/isSubsetOfSet:"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
isSubsetOfSet:}}
\f1 \cf2 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720

\f0\fs20 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\fs24 \cf0 \kerning1\expnd0\expndtw0 \
//Complexity o(n)\
-(BOOL)isAnagram:(String string1, String string2)\
\{\
	assert(string1.length== string2.length)\
\
	NSSet string1Set \
	NSSet string2Set \
	for (i=0... string1.length)\
	\{\
		string1Set = add each charater from  string1\
		string2Set = add each charater from string2\
	\}\
\
	if(string1Set == string2Set)\
	\{\
	return YES\
	\}\
	return NO\
	\
	\
\}}